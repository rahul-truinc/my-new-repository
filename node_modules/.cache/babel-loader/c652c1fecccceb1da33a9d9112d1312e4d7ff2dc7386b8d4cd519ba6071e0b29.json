{"ast":null,"code":"var _jsxFileName = \"/Users/rahul/Documents/functionreact/src/Pages/OurPartners.js\";\nimport React, { Fragment } from 'react';\nimport OurPartnerData from '../API/OurPartner.json';\nimport Breadcrumb from '../Componentes/Breadcrumb/Breadcrumb';\nimport Container from '../Componentes/Container/Container';\nimport ZPattern from '../Componentes/ZPattern/ZPattern';\nimport ParagraphTextSection from '../Componentes/ParagraphTextSection/ParagraphTextSection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OurPartners = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      value: \"main-container BreadcrumbContainer\",\n      children: /*#__PURE__*/_jsxDEV(Breadcrumb, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      value: \"main-container\",\n      children: OurPartnerData.ZPatternData.map((ZPatternvalue, ZPatternkey) => /*#__PURE__*/_jsxDEV(ZPattern, {\n        value: ZPatternvalue\n      }, ZPatternkey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      value: \"main-container contentBodysection\",\n      children: OurPartnerData.ParagraphTextSectionData.map((SectionValue, Sectionkey) => {\n        console.log('SectionValue', SectionValue);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [SectionValue !== null && SectionValue !== void 0 && SectionValue.paragraphTextheading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: SectionValue.paragraphTextheading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 26\n          }, this) : \"\", SectionValue === null || SectionValue === void 0 ? void 0 : SectionValue.paragraphTextcontent]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = OurPartners;\nexport default OurPartners;\nvar _c;\n$RefreshReg$(_c, \"OurPartners\");","map":{"version":3,"names":["React","Fragment","OurPartnerData","Breadcrumb","Container","ZPattern","ParagraphTextSection","jsxDEV","_jsxDEV","_Fragment","OurPartners","children","value","fileName","_jsxFileName","lineNumber","columnNumber","ZPatternData","map","ZPatternvalue","ZPatternkey","ParagraphTextSectionData","SectionValue","Sectionkey","console","log","paragraphTextheading","paragraphTextcontent","_c","$RefreshReg$"],"sources":["/Users/rahul/Documents/functionreact/src/Pages/OurPartners.js"],"sourcesContent":["import React, { Fragment } from 'react'\nimport OurPartnerData from '../API/OurPartner.json'\nimport Breadcrumb from '../Componentes/Breadcrumb/Breadcrumb'\nimport Container from '../Componentes/Container/Container'\nimport ZPattern from '../Componentes/ZPattern/ZPattern'\nimport ParagraphTextSection from '../Componentes/ParagraphTextSection/ParagraphTextSection'\n\nconst OurPartners = () => {\n    return (\n        <Fragment>\n            <Container value='main-container BreadcrumbContainer'>\n                <Breadcrumb />\n            </Container>\n            <Container value='main-container'>\n                {OurPartnerData.ZPatternData.map((ZPatternvalue, ZPatternkey) =>\n                    <ZPattern key={ZPatternkey} value={ZPatternvalue} />\n                )}\n            </Container>\n            <Container value='main-container contentBodysection'>\n                {OurPartnerData.ParagraphTextSectionData.map((SectionValue, Sectionkey) =>{\n                    console.log('SectionValue', SectionValue)\n                    return(\n                        <>\n                        {SectionValue?.paragraphTextheading ?\n                         <h1>{SectionValue.paragraphTextheading}</h1> \n                        : \"\"}\n                        {SectionValue?.paragraphTextcontent}\n                        </>\n                    )\n                }\n                    \n                )}\n            </Container>\n        </Fragment>\n    )\n}\n\nexport default OurPartners\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,UAAU,MAAM,sCAAsC;AAC7D,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,QAAQ,MAAM,kCAAkC;AACvD,OAAOC,oBAAoB,MAAM,0DAA0D;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAP,QAAA,IAAAQ,SAAA;AAE3F,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,oBACIF,OAAA,CAACP,QAAQ;IAAAU,QAAA,gBACLH,OAAA,CAACJ,SAAS;MAACQ,KAAK,EAAC,oCAAoC;MAAAD,QAAA,eACjDH,OAAA,CAACL,UAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACZR,OAAA,CAACJ,SAAS;MAACQ,KAAK,EAAC,gBAAgB;MAAAD,QAAA,EAC5BT,cAAc,CAACe,YAAY,CAACC,GAAG,CAAC,CAACC,aAAa,EAAEC,WAAW,kBACxDZ,OAAA,CAACH,QAAQ;QAAmBO,KAAK,EAAEO;MAAc,GAAlCC,WAAW;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyB,CACvD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACZR,OAAA,CAACJ,SAAS;MAACQ,KAAK,EAAC,mCAAmC;MAAAD,QAAA,EAC/CT,cAAc,CAACmB,wBAAwB,CAACH,GAAG,CAAC,CAACI,YAAY,EAAEC,UAAU,KAAI;QACtEC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,YAAY,CAAC;QACzC,oBACId,OAAA,CAAAC,SAAA;UAAAE,QAAA,GACCW,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEI,oBAAoB,gBAClClB,OAAA;YAAAG,QAAA,EAAKW,YAAY,CAACI;UAAoB;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GAC3C,EAAE,EACHM,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEK,oBAAoB;QAAA,eACjC,CAAC;MAEX,CAEA;IAAC;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEnB,CAAC;AAAAY,EAAA,GA5BKlB,WAAW;AA8BjB,eAAeA,WAAW;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}